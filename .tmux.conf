# vim: foldmethod=marker: ft=sh
# Set options (set) {{{
set -g default-shell $SHELL
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",xterm-256color:Tc"
set -g status-keys vi  # Vim key mappings in the status line
set -g prefix 'C-\'  # Vim uses C-b, so use this instead
set -g visual-activity off
set -g base-index 1
set -g history-limit 50000
set -g display-time 3000
set -s escape-time 0  # Allows for faster key repetition
set -g status-keys emacs
set -g mouse on
set -ga update-environment " VIRTUAL_ENV"

if-shell "uname | grep -q Darwin" "\
	set -g default-command 'reattach-to-user-namespace -l ${SHELL}' \
"
# }}}

# Set window options (setw) {{{
setw -g mode-keys vi # Vim key mappings in copy and choice modes
setw -g monitor-activity off
setw -g pane-base-index 1
setw -g aggressive-resize on
# }}}

# Theme {{{
set -g display-panes-active-colour white
set -g display-panes-colour brightwhite
set -g status-justify centre

set -g message-style bg=brightblack,fg=brightcyan

set -g pane-active-border-style fg=white
set -g pane-border-style fg=brightgreen

set -g status-style bg=brightblack
set -g status-left-style none
set -g status-left-length 60
set -g status-left '#[fg=colour15, bg=colour11] #S #[fg=colour11, bg=colour8]'

set -g status-right-style none
set -g status-right-length 90
set -g status-right '#[fg=colour11, bg=colour8]#[fg=colour15, bg=colour11] %a d %b %H:%M '

setw -g window-status-current-style fg=brightwhite,bold
setw -g window-status-current-format " #I:#W#F "

setw -g window-status-style fg=brightcyan,none
setw -g window-status-format " #I:#W#F "

setw -g window-status-activity-style bold,blink
# }}}

# Key Mappings {{{
unbind C-b
bind-key 'C-\' send-prefix

# Select pane with Vi key mappings
bind h select-pane -L
bind C-h select-pane -L
bind j select-pane -D
bind C-j select-pane -D
bind k select-pane -U
bind C-k select-pane -U
bind l select-pane -R
bind C-l select-pane -R
bind a last-window
bind C-n select-window -n
bind C-p select-window -p

# Use Alt-vim keys without prefix key to switch panes
bind -n M-[ last-pane
bind -n M-] select-pane -t :.+
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R
bind -n M-n select-window -n
bind -n M-p select-window -p

# Resize pane
bind -r < resizep -L
bind -r + resizep -D
bind -r _ resizep -U
bind -r > resizep -R

# Split pane
bind '"' splitw -c '#{pane_current_path}'
bind | splitw -h -c '#{pane_current_path}'
bind c neww -c '#{pane_current_path}'

bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle
bind -T copy-mode-vi y send -X copy-selection

if-shell "uname | grep -q Darwin" "\
  bind -T copy-mode-vi y send -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'; \
  bind -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'; \
  bind -n WheelUpPane if-shell -Ft = '#{mouse_any_flag}' \
    'send-keys -M' \
    \"if-shell -Ft = '#{pane_in_mode}' \
      'send-keys -M' 'select-pane -t =; copy-mode -e; send-keys -M'\"; \
  bind -n WheelDownPane select-pane -t =\\; send-keys -M \
"
# }}}
